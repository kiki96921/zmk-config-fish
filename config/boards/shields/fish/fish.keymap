// キーマップを更新する方法は https://o24.works/fish/guide を参照
// 視覚的に編集するには https://o24.works/fish/editor を参照


// 定義を呼んでくる
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>


// 特殊入力の挙動を調整できる

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <225>;
    quick-tap-ms = <200>;
    require-prior-idle-ms = <150>;
};

&lt {
    flavor = "balanced";
    quick-tap-ms = <200>;
};

&sk {
};

&sl {
};

&caps_word {
};

&key_repeat {
};


/ {
    // 独自の入力を定義できる（上級者向け）

    behaviors {
    };

    macros {
    };

    conditional_layers {
    };


    // 複数キーの同時押しに特別の入力を設定できる
    // キー番号早見表：
    //       0  1  2  3     4  5  6  7
    // 8  9 10 11 12 13    14 15 16 17 18 19
    //   20 21 22 23          24 25 26 27
    //            28 29    30 31

    combos {
        compatible = "zmk,combos";
        timeout-ms = <150>;
        require-prior-idle-ms = <150>;

        combo_int5 {
            key-positions = <21 22>;
            bindings = <&kp INT5>;
        };

        combo_int4 {
            key-positions = <25 26>;
            bindings = <&kp INT4>;
        };

        combo_f {
            key-positions = <4 14>;
            bindings = <&kp F>;
        };

        combo_dot {
            key-positions = <3 13>;
            bindings = <&kp DOT>;
        };

        combo_q {
            key-positions = <8 9>;
            bindings = <&kp Q>;
        };

        combo_p {
            key-positions = <18 19>;
            bindings = <&kp P>;
        };
    };
    

    // キーに入力を割り当てる
    // 型（&...）は https://zmk.dev/docs/behaviors/... を参照
    // キーコードは https://zmk.dev/docs/codes/... を参照

    keymap {
        compatible = "zmk,keymap";

        layer_L0 {
            bindings = <
                        &kp L       &kp U       &kp DOT     &kp MINUS           &kp D       &kp W       &kp R       &kp Y       
&lt 1 ESC   &kp E       &mt LSHFT I &mt LCTRL A &mt LALT O  &kp COMMA           &kp G       &mt RALT T  &mt RCTRL N &mt RSHFT S &kp H       &lt 2 P     
            &kp Z       &lt 3 X     &lt 2 C     &lt 1 V                                     &kp K       &kp M       &kp J       &kp B       
                                                &mt LGUI SPACE &lt 2 TAB        &lt 3 RET   &mt RSHFT BSPC 
            >;
        };

        layer_L1 {
            bindings = <
                        &kp LBKT    &kp RBKT    &kp AT      &kp COLON           &kp HOME    &kp BSPC    &kp UP      &kp DEL     
&kp TILDE   &kp COLON   &kp LS(INT3) &kp LS(INT1) &kp INT3  &kp SEMI            &kp END     &kp LEFT    &kp DOWN    &kp RIGHT   &kp RCTRL   &kp INS     
            &kp GRAVE   &kp LSHFT   &kp LGUI    &trans                                      &kp ESC     &kp PG_UP   &kp PG_DN   &kp PSCRN   
                                                &trans      &trans              &kp RET     &lt 3 SPACE 
            >;
        };

        layer_L2 {
            bindings = <
                        &trans      &trans      &trans      &kp CARET           &kp STAR    &kp N7      &kp N8      &kp N9      
&trans      &kp C_VOL_DN &kp C_VOL_UP &trans    &trans      &trans              &kp DOT     &kp N4      &kp N5      &kp N6      &kp PLUS    &kp MINUS   
            &trans      &kp LSHFT   &trans      &trans                                      &kp N1      &kp N2      &kp N3      &kp FSLH    
                                                &lt 3 BSPC  &trans              &trans      &kp N0      
            >;
        };

        layer_L3 {
            bindings = <
                        &trans      &trans      &trans      &trans              &none       &kp F7      &kp F8      &kp F9      
&trans      &trans      &trans      &trans      &trans      &trans              &none       &kp F4      &kp F5      &kp F6      &kp F11     &kp F12     
            &trans      &trans      &trans      &trans                                      &kp F1      &kp F2      &kp F3      &kp F10     
                                                &mo 6       &mo 6               &trans      &trans      
            >;
        };

        layer_win_math {
            bindings = <
                        &kp N4      &kp N5      &kp N6      &trans              &kp CARET   &kp LT      &kp EQUAL   &kp GT      
&kp TILDE   &kp N0      &mt LGUI N1 &mt LALT N2 &mt LSHFT N3 &kp DOT            &kp UNDER   &mt RSHFT PLUS &mt RALT MINUS &mt RGUI STAR &kp FSLH &kp PRCNT 
            &kp DLLR    &kp N7      &kp N8      &kp N9                                      &kp EXCL    &kp QMARK   &kp COLON   &kp SEMI    
                                                &none       &trans              &trans      &lt 6 SPACE 
            >;
        };

        layer_win_navi {
            bindings = <
                        &kp LBKT    &kp DQT     &kp RBKT    &kp AMPS            &kp C_VOL_UP &kp ESC    &kp UP      &kp CAPS    
&kp AT      &kp HASH    &mt LGUI LPAR &mt LALT SQT &mt LSHFT RPAR &kp PIPE      &kp C_VOL_DN &kp LEFT   &kp DOWN    &kp RIGHT   &kp C_BRI_UP &kp PSCRN  
            &kp BSLH    &kp LBRC    &kp GRAVE   &kp RBRC                                    &kp C_PREV  &kp C_PP    &kp C_NEXT  &kp C_BRI_DN 
                                                &lt 6 BSPC  &trans              &trans      &none       
            >;
        };

        layer_system {
            bindings = <
                        &bt BT_SEL 4 &bt BT_CLR &bt BT_CLR_ALL &out OUT_TOG     &tog 3      &kp INS     &kp HOME    &kp PG_UP   
&kp F1      &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &kp F6          &kp F7      &kp DEL     &kp END     &kp PG_DN   &kp K_APP   &kp F12     
            &kp F2      &kp F3      &kp F4      &kp F5                                      &kp F8      &kp F9      &kp F10     &kp F11     
                                                &none       &none               &none       &none       
            >;
        };
    };
};